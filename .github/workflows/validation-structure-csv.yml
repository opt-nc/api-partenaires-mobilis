# Le but de cette action est de valider techniquement sur GitHub actions les points suivants :
#   1. Démarrer un psql
#   2. créer une table dans psql
#   3. tenter un chargement via la commande COPY
#
# Plus d'infos ici : https://github.com/opt-nc/api-partenaires-mobilis/issues/10
# Pour démarrer un conteneur séparé, cela s'appelle un "service" dans les GitHub action's: https://docs.github.com/en/actions/guides/about-service-containers
#
# Par ailleurs, les validations sont faites aussi au niveau JUnit car cela avait été fait ainsi au début et parce que c'est plus pratique à tester en local
name: Validation structure CSV sur Postgres

on:
  push:
    paths:
      - src/main/resources/partenaires.csv

jobs:
  validation-csv:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started (vu sur https://docs.github.com/en/actions/guides/creating-postgresql-service-containers)
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # paramétrâge psql global
    env:
      PGHOST: localhost # car ce job ne s'éxécute pas dans un conteneur
      PGUSER: postgres
      PGPASSWORD: postgres
    steps:
      - uses: actions/checkout@v3
      - name: init schema
        run: psql -a -f .github/workflows/schema.sql
      - name: test partenaires csv with COPY
        run: cat src/main/resources/partenaires.csv | psql -c "COPY partenaire from STDIN WITH (FORMAT csv, HEADER true)"
      - name: test communes csv with COPY
        run: cat src/main/resources/communes.csv | psql -c "COPY commune from STDIN WITH (FORMAT csv, HEADER true)"
